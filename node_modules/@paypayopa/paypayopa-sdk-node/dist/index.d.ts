import { Conf } from "./lib/conf";
import { PayPayRestSDK } from "./lib/paypay-rest-sdk";
declare const _default: {
    Configure: (clientConfig: {
        clientId: string;
        clientSecret: string;
        merchantId?: string | undefined;
        productionMode?: boolean | undefined;
        perfMode?: boolean | undefined;
        env?: "PROD" | "STAGING" | "PERF_MODE" | undefined;
        conf?: Conf | undefined;
    }) => void;
    CreatePayment: (payload: any, ...args: [callback?: import("./lib/httpsClient").HttpsClientMessage | undefined] | [agreeSimilarTransaction: boolean, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined]) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    QRCodeCreate: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    QRCodeDelete: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    GetCodePaymentDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    GetPaymentDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PaymentCancel: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PaymentAuthCapture: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PaymentAuthRevert: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PaymentRefund: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PaymentPreauthorize: (payload: any, ...args: [callback?: import("./lib/httpsClient").HttpsClientMessage | undefined] | [agreeSimilarTransaction: boolean, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined]) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    GetRefundDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CheckUserWalletBalance: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    Authorization: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    AuthorizationResult: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    AccountLinkQRCodeCreate: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    ValidateJWT: (token: string, clientSecret: string) => string | object;
    CreateSubscriptionPayment: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CreatePendingPayment: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    GetPendingPaymentDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CancelPendingOrder: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    RefundPendingPayment: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    GetUserAuthorizationStatus: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    UnlinkUser: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CashBack: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CheckCashBackDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    ReversalCashBack: (payload: any, callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    CheckCashBackReversalDetails: (inputParams: (string | number)[], callback?: import("./lib/httpsClient").HttpsClientMessage | undefined) => Promise<import("./lib/httpsClient").HttpsClientSuccess | import("./lib/httpsClient").HttpsClientError>;
    PayPayRestSDK: typeof PayPayRestSDK;
    Conf: typeof Conf;
};
export = _default;
